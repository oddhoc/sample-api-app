---
version: 2.1
orbs:
  ruby: circleci/ruby@0.2.1 

jobs:
  test:
    docker:
      - image: circleci/ruby:2.7.1-buster-node
      - image: postgres:12.1-alpine
        name: db
        environment:
          POSTGRES_PASSWORD: sekrit
    steps:
      - checkout
      - ruby/load-cache
      - ruby/install-deps
      - run:
          name: setup database
          command: bundle exec rake db:create db:migrate
          environment:
            RAILS_ENV: test
            DATABASE_URL: postgres://postgres:sekrit@db/sample_api_app_test
      - run:
          name: run tests
          command: bundle exec rake test
          environment:
            RAILS_ENV: test
            DATABASE_URL: postgres://postgres:sekrit@db/sample_api_app_test
      - ruby/save-cache
  build:
    docker:
      - image: circleci/ruby:2.7.1-buster-node
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          key: v1-buildpack-0.8.1
      - run:
          name: install pack from buildpacks.io
          command: |
            if [ ! -f cache/pack ] ; then
              mkdir cache
              cd cache
              wget https://github.com/buildpacks/pack/releases/download/v0.8.1/pack-v0.8.1-linux.tgz
              tar xvf pack-v0.8.1-linux.tgz
              rm pack-v0.8.1-linux.tgz
            fi
      - run:
          name: login to quay
          command: echo ${QUAY_PASSWORD} | docker login -u ${QUAY_USERNAME} --password-stdin quay.io
      - run:
          name: build deployable image
          command: ./cache/pack build quay.io/oddhoc/sample-api-app:${CIRCLE_SHA1} --publish --builder heroku/buildpacks:18
      - save_cache:
          key: v1-buildpack-0.8.1
          paths:
            - cache
  # release:
  deploy:
    docker:
      - image: circleci/ruby:2.7.1-buster-node
    steps:
      - checkout
      - deploy:
          name: create github deployment
          command: ./bin/create-gh-deployment.sh

workflows:
  version: 2
  TBRD:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      # - release:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only:
      #           - master
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
